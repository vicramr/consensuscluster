# https://docs.travis-ci.com/user/languages/minimal-and-generic/
language: minimal

os:
  - linux
  - osx

# This only applies to Linux.
dist: xenial

# This only applies to MacOS. https://docs.travis-ci.com/user/reference/osx/#jdk-and-macos
osx_image:
  - xcode9.4
  - xcode10.2

sudo: false

env:
  - PYTHON_VERSION="3.5" NUMPY_VERSION="1.13.1" SCIPY_VERSION="0.19.1" SKLEARN_VERSION="0.19.1" MPL_VERSION="2.2"
  - PYTHON_VERSION="3.5" NUMPY_VERSION="1.13.1" SCIPY_VERSION="0.19.1" SKLEARN_VERSION="0.19.1" MPL_VERSION="*"
  - PYTHON_VERSION="3.5" NUMPY_VERSION="*" SCIPY_VERSION="*" SKLEARN_VERSION="*" MPL_VERSION="*"
  - PYTHON_VERSION="3.6" NUMPY_VERSION="1.13.1" SCIPY_VERSION="0.19.1" SKLEARN_VERSION="0.19.1" MPL_VERSION="2.2"
  - PYTHON_VERSION="3.6" NUMPY_VERSION="1.13.1" SCIPY_VERSION="0.19.1" SKLEARN_VERSION="0.20.3" MPL_VERSION="2.2"
  - PYTHON_VERSION="3.6" NUMPY_VERSION="1.13.1" SCIPY_VERSION="0.19.1" SKLEARN_VERSION="0.20.3" MPL_VERSION="*"
  - PYTHON_VERSION="3.6" NUMPY_VERSION="*" SCIPY_VERSION="*" SKLEARN_VERSION="*" MPL_VERSION="*"
  - PYTHON_VERSION="3.7" NUMPY_VERSION="*" SCIPY_VERSION="*" SKLEARN_VERSION="*" MPL_VERSION="2.2"
  - PYTHON_VERSION="3.7" NUMPY_VERSION="*" SCIPY_VERSION="*" SKLEARN_VERSION="*" MPL_VERSION="*"
  - PYTHON_VERSION="3.7" NUMPY_VERSION="*" SCIPY_VERSION="*" SKLEARN_VERSION="nightly" MPL_VERSION="*"

# The 2 osx_image rows above also cause the Linux builds to be doubled even though
# it won't make a difference, so here we exclude half of those doubled builds.
matrix:
  exclude:
    - os: linux
      osx_image: xcode10.2

install:
  # install miniconda
  # Mac URL found here: https://docs.conda.io/en/latest/miniconda.html
  # Mac silent install instructions: https://conda.io/projects/conda/en/latest/user-guide/install/macos.html
  - |
    if [ $TRAVIS_OS_NAME = 'osx' ]; then
      wget https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh
    else
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
    fi
  - chmod +x miniconda.sh && ./miniconda.sh -b -p $HOME/miniconda
  - export PATH=$HOME/miniconda/bin:$PATH
  - conda update --yes conda
  # create the testing environment
  - conda create -n testenv --yes python=$PYTHON_VERSION pip
  - source activate testenv
  - |
    if [ $SKLEARN_VERSION = "nightly" ]; then
      conda install --yes numpy=$NUMPY_VERSION scipy=$SCIPY_VERSION matplotlib=$MPL_VERSION cython nose pytest pytest-cov scikit-image
      # install nightly wheels: https://github.com/MacPython/scikit-learn-wheels/pull/17
      pip install --pre -f https://sklearn-nightly.scdn8.secure.raxcdn.com scikit-learn
    else
      conda install --yes numpy=$NUMPY_VERSION scipy=$SCIPY_VERSION scikit-learn=$SKLEARN_VERSION matplotlib=$MPL_VERSION cython nose pytest pytest-cov scikit-image
    fi
  - pip install codecov
  - pip install .

script:
  - mkdir for_test
  - cd for_test
  - python --version
  - python -c "import numpy; print('numpy version:', numpy.__version__)"
  - python -c "import scipy; print('scipy version:', scipy.__version__)"
  - python -c "import sklearn; print('sklearn version:', sklearn.__version__)"
  - python -c "import matplotlib; print('matplotlib version:', matplotlib.__version__)"
  - pytest --durations=0 -v --cov=consensuscluster --pyargs consensuscluster

after_success:
  - codecov
