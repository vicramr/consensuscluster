# Note: all Appveyor VMs are running 64-bit Windows. See this thread for 2018:
# https://help.appveyor.com/discussions/questions/20637-is-it-possible-to-force-running-tests-on-both-32-bit-and-64-bit-windows

build: false

image:
  - Visual Studio 2013
  - Visual Studio 2017

environment:
  matrix:
    - PYTHON: "C:\\Miniconda35"
      PYTHON_VERSION: "=3.5"
      NUMPY_VERSION: "=1.13.1"
      SCIPY_VERSION: "=0.19.1"
      SKLEARN_VERSION: "=*"
      MPL_VERSION: "<3"

    - PYTHON: "C:\\Miniconda35-x64"
      PYTHON_VERSION: "=3.5"
      NUMPY_VERSION: "=1.13.1"
      SCIPY_VERSION: "=0.19.1"
      SKLEARN_VERSION: "=*"
      MPL_VERSION: "<3"

    - PYTHON: "C:\\Miniconda36"
      PYTHON_VERSION: "=3.6"
      NUMPY_VERSION: "=1.13.1"
      SCIPY_VERSION: "=0.19.1"
      SKLEARN_VERSION: "=0.19.1"
      MPL_VERSION: "=2.2"

    - PYTHON: "C:\\Miniconda36-x64"
      PYTHON_VERSION: "=3.6"
      NUMPY_VERSION: "=1.13.1"
      SCIPY_VERSION: "=0.19.1"
      SKLEARN_VERSION: "=0.19.1"
      MPL_VERSION: "=3.*"

    - PYTHON: "C:\\Miniconda37-x64"
      PYTHON_VERSION: "=3.7"
      NUMPY_VERSION: "=*"
      SCIPY_VERSION: "=*"
      SKLEARN_VERSION: "=0.19.1"
      MPL_VERSION: "=2.2"

    - PYTHON: "C:\\Miniconda37-x64"
      PYTHON_VERSION: "=3.7"
      NUMPY_VERSION: "=*"
      SCIPY_VERSION: "=*"
      SKLEARN_VERSION: "=*"
      MPL_VERSION: "=*"

install:
  # Prepend miniconda installed Python to the PATH of this build
  # Add Library/bin directory to fix issue
  # https://github.com/conda/conda/issues/1753
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PYTHON%\\Library\\bin;%PATH%"
  # install the dependencies
  # Note: here we are using fuzzy matching, as opposed to exact matching. See here (heads up, it's not well documented):
  # https://docs.conda.io/projects/conda-build/en/latest/resources/package-spec.html#package-match-specifications
  - "conda create -n testenv --yes python%PYTHON_VERSION% pip numpy%NUMPY_VERSION% scipy%SCIPY_VERSION% scikit-learn%SKLEARN_VERSION% matplotlib%MPL_VERSION% nose pytest pytest-cov scikit-image"
  - activate testenv
  - pip install codecov
  - pip install .

test_script:
  - mkdir for_test
  - cd for_test
  - python --version
  - python -c "import numpy; print('numpy version:', numpy.__version__)"
  - python -c "import scipy; print('scipy version:', scipy.__version__)"
  - python -c "import sklearn; print('sklearn version:', sklearn.__version__)"
  - python -c "import matplotlib; print('matplotlib version:', matplotlib.__version__)"
  - pytest -v --cov=consensuscluster --pyargs consensuscluster

after_test:
  - cp .coverage %APPVEYOR_BUILD_FOLDER%
  - cd %APPVEYOR_BUILD_FOLDER%
  - codecov
